{"version":3,"file":"static/js/753.2f87c52e.chunk.js","mappings":"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","sources":["Service/API.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesItem/MoviesItem.styled.js","components/MoviesList/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY='3a3d464bfa5c4e0090fb8ce329cb5fcf';\nconst BASE_URL='https://api.themoviedb.org/3';\naxios.defaults.baseURL=BASE_URL;\n\nexport const fetchTrendingMovies=async()=>{\n    const {data}= await axios.get(`/trending/movie/day?api_key=${API_KEY}`)\n    return data\n}\n\nexport const fetchMovieById=async(movieId)=>{\n    const {data}= await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    return data\n}\n\nexport const fetchMovieCast=async(movieId)=>{\n    const {data}= await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    return data\n}\n\nexport const fetchReviewMovie=async(movieId)=>{\n    const {data}= await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n    return data\n}\n\nexport const fetchSearchMovie=async(searchParams)=>{\n    const{data}=await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&${searchParams}`)\n    return data\n}","import styled from \"styled-components\";\n\nexport const MoviesListStyled=styled.ul`\n`","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const MoviesItem=styled.li`\n`\n\nexport const NavLinkStyled=styled(NavLink)`\ndisplay:inline-block;\ntext-decoration:none;\ncolor:#44474a;\nfont-weight:600;\nmargin-bottom:2px;`","import PropTypes from 'prop-types'\nimport { MoviesItem,NavLinkStyled } from \"./MoviesItem.styled\"\n\nexport const MoviesListItem=({movie,id,location})=>{\n    return(\n        <MoviesItem\n        id={id}><NavLinkStyled to={`/movies/${id}`} state={{from:location}}>{movie}</NavLinkStyled></MoviesItem>\n    )\n}\n\nMoviesListItem.propTypes={\n    movie:PropTypes.string.isRequired,\n    id:PropTypes.number.isRequired,\n    location:PropTypes.object.isRequired,\n}","import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom';\nimport {MoviesListStyled} from './MoviesList.styled';\nimport { MoviesListItem } from \"components/MoviesList/MoviesItem/MoviesItem\";\n\nexport const MoviesList=({movies})=>{\n    const location=useLocation();\n    return(<MoviesListStyled>\n        {movies.map(movie=> {\n            return (<MoviesListItem \n                key= {movie.id}\n                id={movie.id}\n                movie={movie.title}\n                location={location}/>)\n            })}\n            </MoviesListStyled>)\n}\n\nMoviesList.propTypes={\n    movies:PropTypes.array.isRequired,\n}","import styled from \"styled-components\";\n\n\nexport const SearchFormMovies=styled.form`\ndisplay:flex;\nmargin-bottom:20px;\n`\n\nexport const InputSearch=styled.input`\npadding:4px;\nborder-radius:4px;\nmargin-right:4px;\nbackground-color:#e1e4fa;\n`\n\nexport const ButtonSearch=styled.button`\ncursor:pointer;\nbackground-color:#02f73c;\ncolor:#414a45;\nborder-radius:4px;\n&:hover,\n&:focus{\n    background-color:#266943;\n    color:white;\n    border:1px solid green;\n}\n\n`","\nimport PropTypes from 'prop-types'\nimport { SearchFormMovies,InputSearch, ButtonSearch  } from \"./SearchForm.styled\";\n\nexport const SearchForm=({onSubmit,getQuery,notify})=>{\n\n    const onSubmitClick=(ev)=>{\n    ev.preventDefault()\n    const query=ev.currentTarget.elements['query'].value\n    if (query.trim()==='')\n    {notify();\n    return} \n    else \n    {onSubmit(query)}\n    }\n\n    return(\n    <SearchFormMovies \n        onSubmit={onSubmitClick}>\n        <InputSearch  \n        name=\"query\"\n        type='text'\n        value={getQuery}\n        placeholder=\"Enter something for search\"\n        autoFocus\n        />\n    <ButtonSearch type='submit'>Search Movie</ButtonSearch>\n    </SearchFormMovies>)\n}\n\nSearchForm.propTypes={\n    onSubmit:PropTypes.func.isRequired,\n    getQuery:PropTypes.string,\n    notify:PropTypes.func.isRequired,\n}","import {useState, useEffect} from 'react';\nimport React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { ToastContainer, notifyNoResults,notifyWarn,notifyError } from 'js/ToastNotify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport * as MoviesService from 'Service/API';\nimport { SearchForm } from \"components/SearchForm/SearchForm\"; \nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies=()=>{\n    const [searchedFilms,setSearchedFilms]=useState([])\n    const[searchParams,setSearchParams]=useSearchParams()\n    \n    useEffect(()=>{\n        const paramsQuery=searchParams.get('query');\n        if(paramsQuery===null) return;\n        \n            const onSearchMovie=async(searchParams)=>{\n                try{\n        const {results:searchedMovies}= await MoviesService.fetchSearchMovie(searchParams)\n        if(searchedMovies.length===0){\n        notifyNoResults()\n        }\n        setSearchedFilms([...searchedMovies])} catch {notifyError()}}\n    onSearchMovie(searchParams)\n    },[searchParams])\n\n    const onSubmitClick=(query)=>{\n        if(!query)return;\n        setSearchParams({query})\n    }\n\n    const getQuery=()=>{\n        searchParams.get('query' && '')\n    }\n\n    return(<><SearchForm\n        onSubmit={onSubmitClick}\n        value={getQuery}\n        notify={notifyWarn}\n    />\n    <MoviesList\n    movies={searchedFilms}\n    />\n    <ToastContainer\n    position=\"top-center\"\n    autoClose={1000}\n    hideProgressBar={false}\n    newestOnTop={false}\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable\n    pauseOnHover\n/></>)\n}\n\nexport default Movies"],"names":["API_KEY","axios","fetchTrendingMovies","data","fetchMovieById","movieId","fetchMovieCast","fetchReviewMovie","fetchSearchMovie","searchParams","MoviesListStyled","styled","MoviesItem","NavLinkStyled","NavLink","MoviesListItem","movie","id","location","to","state","from","MoviesList","movies","useLocation","map","title","SearchFormMovies","InputSearch","ButtonSearch","SearchForm","onSubmit","getQuery","notify","ev","preventDefault","query","currentTarget","elements","value","trim","name","type","placeholder","autoFocus","useState","searchedFilms","setSearchedFilms","useSearchParams","setSearchParams","useEffect","get","onSearchMovie","MoviesService","searchedMovies","results","length","notifyNoResults","notifyError","notifyWarn","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}