{"version":3,"file":"static/js/979.a01da65c.chunk.js","mappings":"4TACMA,EAAQ,mCAEdC,IAAAA,SAAAA,QADe,+BAGR,IAAMC,EAAmB,mCAAC,sGACTD,IAAAA,IAAA,sCAAyCD,IADhC,uBACtBG,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAD,qDAKnBC,EAAc,mCAAC,WAAMC,GAAN,yFACJJ,IAAAA,IAAA,iBAAoBI,EAApB,oBAAuCL,EAAvC,oBADI,uBACjBG,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAD,sDAKdG,EAAc,mCAAC,WAAMD,GAAN,yFACJJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADI,uBACjBG,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAD,sDAKdI,EAAgB,mCAAC,WAAMF,GAAN,yFACNJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADM,uBACnBG,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAD,sDAKhBK,EAAgB,mCAAC,WAAMC,GAAN,yFACRR,IAAAA,IAAA,gCAAmCD,EAAnC,sDAAwFS,IADhF,uBACpBN,EADoB,EACpBA,KADoB,kBAEnBA,GAFmB,2CAAD,uD,qDCzBtB,IAAMO,EAAU,WACnBC,OAAOC,SAAS,CACZC,IAAK,IACLC,KAAM,EACNC,SAAU,a,oMCFLC,EAAYC,EAAAA,GAAAA,GAAD,wBAEXC,EAAWD,EAAAA,GAAAA,GAAD,0BAIVE,EAAaF,EAAAA,GAAAA,EAAD,0DAKZG,EAAYH,EAAAA,GAAAA,EAAD,iHAOXI,EAAWJ,EAAAA,GAAAA,EAAD,wB,SCkBvB,EA/Bc,WACV,OAA2BK,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KAEKnB,GAASoB,EAAAA,EAAAA,MAATpB,QAeL,OAbJqB,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAU,mCAAC,WAAMtB,GAAN,kGAEsBuB,EAAAA,GAA+BvB,GAFrD,gBAEMkB,EAFN,EAEFM,QACPL,GAAW,OAAID,KACfb,EAAAA,EAAAA,KAJS,iDAKJoB,EAAAA,EAAAA,MALI,kCAMV,kBAAIN,EAAW,OANL,yDAAD,sDAOZG,EAAWtB,KACb,CAACA,KAEHqB,EAAAA,EAAAA,YAAU,kBAAIhB,EAAAA,EAAAA,OAAY,CAACa,KAEhB,SAACP,EAAD,UACgB,IAAlBO,EAAQQ,OACTR,EAAQS,KAAI,SAAAC,GACR,IAAOC,EAAmBD,EAAnBC,GAAGC,EAAgBF,EAAhBE,OAAOC,EAASH,EAATG,QACjB,OAAO,UAAClB,EAAD,YACH,UAACC,EAAD,sBAAuBgB,MACvB,SAACf,EAAD,UAAcgB,MAFMF,OAK3B,SAACb,EAAD","sources":["Service/API.js","js/ScrollBy.js","pages/SelectedMovie/ReviewsMovie/Reviews.styled.js","pages/SelectedMovie/ReviewsMovie/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY='3a3d464bfa5c4e0090fb8ce329cb5fcf';\nconst BASE_URL='https://api.themoviedb.org/3';\naxios.defaults.baseURL=BASE_URL;\n\nexport const fetchTrendingMovies=async()=>{\n    const {data}= await axios.get(`/trending/movie/day?api_key=${API_KEY}`)\n    return data\n}\n\nexport const fetchMovieById=async(movieId)=>{\n    const {data}= await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    return data\n}\n\nexport const fetchMovieCast=async(movieId)=>{\n    const {data}= await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    return data\n}\n\nexport const fetchReviewMovie=async(movieId)=>{\n    const {data}= await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n    return data\n}\n\nexport const fetchSearchMovie=async(searchParams)=>{\n    const{data}=await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&${searchParams}`)\n    return data\n}","export const getScroll=()=>{\n    window.scrollBy({\n        top: 200,\n        left: 0,\n        behavior: 'smooth',\n    });\n}","import styled from \"styled-components\";\n\nexport const ReviewsList=styled.ul`\n`\nexport const ReviewItem=styled.li`\n\n`\n\nexport const AuthorReview=styled.p`\npadding: 10px;\nfont-weight:600;\n`\n\nexport const ReviewStyle=styled.p`\nbackground-color:#dcf1f7;\nborder: 2px solid #d1cfcf;\npadding:4px;\nborder-radius:5px;\n`\n\nexport const NotReviews=styled.p`\n`","import { notifyError } from 'js/ToastNotify';\nimport { useState,useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as MoviesService from 'Service/API';\nimport { getScroll } from \"js/ScrollBy\";\nimport {ReviewsList,ReviewItem,AuthorReview,ReviewStyle,NotReviews} from './Reviews.styled';\n\nconst Reviews=()=>{\n    const [reviews,setReviews]=useState([]);\n\n    let {movieId}=useParams();\n\nuseEffect(()=>{\nconst getReviews=async(movieId)=>{\n    try{\n        const {results:reviews}= await MoviesService.fetchReviewMovie(movieId)\n        setReviews([...reviews])\n        getScroll()\n    } catch {notifyError()}\nreturn ()=>setReviews([])}\n    getReviews(movieId)\n},[movieId])\n\nuseEffect(()=>getScroll(),[reviews])\n\n    return(<ReviewsList >\n        {reviews.length !==0 ? \n        reviews.map(review=>{\n            const {id,author,content}=review;\n            return(<ReviewItem key={id}>\n                <AuthorReview>Author: {author}</AuthorReview>\n                <ReviewStyle>{content}</ReviewStyle>\n            </ReviewItem>)\n        })\n        :<NotReviews>We don`t have any reviews for this video.</NotReviews>}\n    </ReviewsList>)\n}\n\nexport default Reviews"],"names":["API_KEY","axios","fetchTrendingMovies","data","fetchMovieById","movieId","fetchMovieCast","fetchReviewMovie","fetchSearchMovie","searchParams","getScroll","window","scrollBy","top","left","behavior","ReviewsList","styled","ReviewItem","AuthorReview","ReviewStyle","NotReviews","useState","reviews","setReviews","useParams","useEffect","getReviews","MoviesService","results","notifyError","length","map","review","id","author","content"],"sourceRoot":""}